version: '3.4'

services:
  es_master:
    container_name: es_master
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: es_master_data
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      node.name: es_master
      discovery.seed_hosts: es_worker_01,es_worker_02
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
  es_worker_01:
    container_name: es_worker_01
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/es_worker.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: es_worker_01_data
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      node.name: es_worker_01
      discovery.seed_hosts: es_master,es_worker_02
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
    depends_on:
      - es_master
  es_worker_02:
    container_name: es_worker_02
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/es_worker.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: es_worker_02_data
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      node.name: es_worker_02
      discovery.seed_hosts: es_master,es_worker_01
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
    depends_on:
      - es_master

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - es_master

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - es_master

networks:
  elk:
    driver: bridge

volumes:
  es_master_data: 
    driver: local
  es_worker_01_data:
    driver: local
  es_worker_02_data:
    driver: local
